ThreadLocal是解决线程安全问题的工具，相当于让每一个线程都开辟了一块内存空间，用来存储共享变量的一个副本，然后每个线程只需要去访问和操作自己的
共享变量的副本就可以了。

不恰当的使用会导致ThreadLocal内存泄漏的问题，线程的私有变量ThreadLocalMap里面的key是一个弱引用，弱引用的特性就是不管是否存在直接引用的关
系，当成员变量没有其他的强引用关系时，对象就会被gc回收，从而导致key可能会变为null，造成内存永远无法被访问，出现内存泄漏的问题。两种方法解决：
1）扩大成员变量ThreadLocal的作用域，避免被gc回收
2）每次使用完ThreadLocal以后，调用remove（）去移除对应的数据
方法二更好一些